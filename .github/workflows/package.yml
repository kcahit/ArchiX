name: ci

on:
  push:
    branches: [ main ]
    tags:
      - "v*"
  pull_request:
    branches: [ prod ]

permissions:
  contents: read
  packages: write

jobs:
  # Branch protection için gereken check: "ci / quick"
  quick:
    runs-on: windows-latest
    if: github.event_name == 'pull_request' && github.base_ref == 'prod'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.x"
      - name: NuGet cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.nuget/packages
            **/obj
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: ${{ runner.os }}-nuget-
      - name: GitHub Packages kaynağını ekle
        shell: pwsh
        run: dotnet nuget add source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" -n github -u "${{ github.repository_owner }}" -p "${{ secrets.GITHUB_TOKEN }}" --store-password-in-clear-text
      - name: Restore
        run: dotnet restore
      - name: Build
        run: dotnet build -c Release --no-restore
      - name: Test
        run: dotnet test -c Release --no-build --verbosity normal

  # main -> prerelease paket (-dev.*)
  dev-package:
    if: github.ref == 'refs/heads/main'
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.x"
      - name: NuGet cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.nuget/packages
            **/obj
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: ${{ runner.os }}-nuget-
      - name: Restore
        run: dotnet restore
      - name: Compute version (-dev.*)
        id: ver
        shell: pwsh
        run: |
          $base = "0.1.0"
          $ver = "$base-dev.${{ github.run_number }}"
          "version=$ver" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
      - name: Pack
        run: dotnet pack .\src\ArchiX.Library\ArchiX.Library.csproj -c Release -o artifacts\packages /p:Version=${{ steps.ver.outputs.version }} /p:ContinuousIntegrationBuild=true
      - name: Push to GitHub Packages
        run: dotnet nuget push .\artifacts\packages\*.nupkg --source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json --api-key ${{ secrets.GITHUB_TOKEN }} --skip-duplicate

  # tag v* -> stabil paket (X.Y.Z)
  prod-release:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.x"
      - name: NuGet cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.nuget/packages
            **/obj
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: ${{ runner.os }}-nuget-
      - name: Get tag version
        id: ver
        shell: pwsh
        run: |
          $tag = "${{ github.ref }}".Replace("refs/tags/","")
          "version=$tag" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
      - name: Pack
        run: dotnet pack .\src\ArchiX.Library\ArchiX.Library.csproj -c Release -o artifacts\packages /p:Version=${{ steps.ver.outputs.version }} /p:ContinuousIntegrationBuild=true
      - name: Push to GitHub Packages
        run: dotnet nuget push .\artifacts\packages\*.nupkg --source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json --api-key ${{ secrets.GITHUB_TOKEN }} --skip-duplicate
