// <auto-generated />
using System;
using ArchiX.Library.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ArchiX.Library.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250828124952_Mig-DilPaketi-Filtre01")]
    partial class MigDilPaketiFiltre01
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ArchiX.Library.Filtering.FilterItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(4)
                        .HasColumnType("datetimeoffset(4)")
                        .HasDefaultValueSql("SYSDATETIMEOFFSET()");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("ItemType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTimeOffset?>("LastStatusAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(4)
                        .HasColumnType("datetimeoffset(4)")
                        .HasDefaultValueSql("SYSDATETIMEOFFSET()");

                    b.Property<int>("LastStatusBy")
                        .HasColumnType("int");

                    b.Property<Guid>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasPrecision(4)
                        .HasColumnType("datetimeoffset(4)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemType", "Code")
                        .IsUnique();

                    b.ToTable("FilterItems", (string)null);

                    b.HasData(
                        new
                        {
                            Id = -10,
                            Code = "Equals",
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            ItemType = "Operator",
                            LastStatusBy = 0,
                            RowId = new Guid("00000000-0000-0000-0000-000000000000"),
                            StatusId = 3
                        },
                        new
                        {
                            Id = -11,
                            Code = "NotEquals",
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            ItemType = "Operator",
                            LastStatusBy = 0,
                            RowId = new Guid("00000000-0000-0000-0000-000000000000"),
                            StatusId = 3
                        },
                        new
                        {
                            Id = -12,
                            Code = "StartsWith",
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            ItemType = "Operator",
                            LastStatusBy = 0,
                            RowId = new Guid("00000000-0000-0000-0000-000000000000"),
                            StatusId = 3
                        },
                        new
                        {
                            Id = -13,
                            Code = "NotStartsWith",
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            ItemType = "Operator",
                            LastStatusBy = 0,
                            RowId = new Guid("00000000-0000-0000-0000-000000000000"),
                            StatusId = 3
                        },
                        new
                        {
                            Id = -14,
                            Code = "EndsWith",
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            ItemType = "Operator",
                            LastStatusBy = 0,
                            RowId = new Guid("00000000-0000-0000-0000-000000000000"),
                            StatusId = 3
                        },
                        new
                        {
                            Id = -15,
                            Code = "NotEndsWith",
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            ItemType = "Operator",
                            LastStatusBy = 0,
                            RowId = new Guid("00000000-0000-0000-0000-000000000000"),
                            StatusId = 3
                        },
                        new
                        {
                            Id = -16,
                            Code = "Contains",
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            ItemType = "Operator",
                            LastStatusBy = 0,
                            RowId = new Guid("00000000-0000-0000-0000-000000000000"),
                            StatusId = 3
                        },
                        new
                        {
                            Id = -17,
                            Code = "NotContains",
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            ItemType = "Operator",
                            LastStatusBy = 0,
                            RowId = new Guid("00000000-0000-0000-0000-000000000000"),
                            StatusId = 3
                        },
                        new
                        {
                            Id = -18,
                            Code = "Between",
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            ItemType = "Operator",
                            LastStatusBy = 0,
                            RowId = new Guid("00000000-0000-0000-0000-000000000000"),
                            StatusId = 3
                        },
                        new
                        {
                            Id = -19,
                            Code = "NotBetween",
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            ItemType = "Operator",
                            LastStatusBy = 0,
                            RowId = new Guid("00000000-0000-0000-0000-000000000000"),
                            StatusId = 3
                        },
                        new
                        {
                            Id = -20,
                            Code = "GreaterThan",
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            ItemType = "Operator",
                            LastStatusBy = 0,
                            RowId = new Guid("00000000-0000-0000-0000-000000000000"),
                            StatusId = 3
                        },
                        new
                        {
                            Id = -21,
                            Code = "GreaterThanOrEqual",
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            ItemType = "Operator",
                            LastStatusBy = 0,
                            RowId = new Guid("00000000-0000-0000-0000-000000000000"),
                            StatusId = 3
                        },
                        new
                        {
                            Id = -22,
                            Code = "LessThan",
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            ItemType = "Operator",
                            LastStatusBy = 0,
                            RowId = new Guid("00000000-0000-0000-0000-000000000000"),
                            StatusId = 3
                        },
                        new
                        {
                            Id = -23,
                            Code = "LessThanOrEqual",
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            ItemType = "Operator",
                            LastStatusBy = 0,
                            RowId = new Guid("00000000-0000-0000-0000-000000000000"),
                            StatusId = 3
                        },
                        new
                        {
                            Id = -24,
                            Code = "In",
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            ItemType = "Operator",
                            LastStatusBy = 0,
                            RowId = new Guid("00000000-0000-0000-0000-000000000000"),
                            StatusId = 3
                        },
                        new
                        {
                            Id = -25,
                            Code = "NotIn",
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            ItemType = "Operator",
                            LastStatusBy = 0,
                            RowId = new Guid("00000000-0000-0000-0000-000000000000"),
                            StatusId = 3
                        },
                        new
                        {
                            Id = -26,
                            Code = "IsNull",
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            ItemType = "Operator",
                            LastStatusBy = 0,
                            RowId = new Guid("00000000-0000-0000-0000-000000000000"),
                            StatusId = 3
                        },
                        new
                        {
                            Id = -27,
                            Code = "IsNotNull",
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            ItemType = "Operator",
                            LastStatusBy = 0,
                            RowId = new Guid("00000000-0000-0000-0000-000000000000"),
                            StatusId = 3
                        });
                });

            modelBuilder.Entity("ArchiX.Library.LanguagePacks.LanguagePack", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(4)
                        .HasColumnType("datetimeoffset(4)")
                        .HasDefaultValueSql("SYSDATETIMEOFFSET()");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Culture")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntityName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FieldName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ItemType")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset?>("LastStatusAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(4)
                        .HasColumnType("datetimeoffset(4)")
                        .HasDefaultValueSql("SYSDATETIMEOFFSET()");

                    b.Property<int>("LastStatusBy")
                        .HasColumnType("int");

                    b.Property<Guid>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasPrecision(4)
                        .HasColumnType("datetimeoffset(4)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemType", "EntityName", "FieldName", "Code", "Culture")
                        .IsUnique()
                        .HasFilter("[EntityName] IS NOT NULL AND [FieldName] IS NOT NULL");

                    b.ToTable("LanguagePacks", (string)null);

                    b.HasData(
                        new
                        {
                            Id = -1001,
                            Code = "Equals",
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            Culture = "tr-TR",
                            Description = "Değer eşit olmalı",
                            DisplayName = "Eşittir",
                            EntityName = "FilterItem",
                            FieldName = "Code",
                            ItemType = "Operator",
                            LastStatusBy = 0,
                            RowId = new Guid("00000000-0000-0000-0000-000000000000"),
                            StatusId = 3
                        },
                        new
                        {
                            Id = -1002,
                            Code = "Equals",
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            Culture = "en-US",
                            Description = "Value must be equal",
                            DisplayName = "Equals",
                            EntityName = "FilterItem",
                            FieldName = "Code",
                            ItemType = "Operator",
                            LastStatusBy = 0,
                            RowId = new Guid("00000000-0000-0000-0000-000000000000"),
                            StatusId = 3
                        },
                        new
                        {
                            Id = -1003,
                            Code = "NotEquals",
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            Culture = "tr-TR",
                            Description = "Değer eşit olmamalı",
                            DisplayName = "Eşit Değil",
                            EntityName = "FilterItem",
                            FieldName = "Code",
                            ItemType = "Operator",
                            LastStatusBy = 0,
                            RowId = new Guid("00000000-0000-0000-0000-000000000000"),
                            StatusId = 3
                        },
                        new
                        {
                            Id = -1004,
                            Code = "NotEquals",
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            Culture = "en-US",
                            Description = "Value must not be equal",
                            DisplayName = "Not Equal",
                            EntityName = "FilterItem",
                            FieldName = "Code",
                            ItemType = "Operator",
                            LastStatusBy = 0,
                            RowId = new Guid("00000000-0000-0000-0000-000000000000"),
                            StatusId = 3
                        },
                        new
                        {
                            Id = -1005,
                            Code = "StartsWith",
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            Culture = "tr-TR",
                            Description = "Başlangıç eşleşmesi",
                            DisplayName = "Başlar",
                            EntityName = "FilterItem",
                            FieldName = "Code",
                            ItemType = "Operator",
                            LastStatusBy = 0,
                            RowId = new Guid("00000000-0000-0000-0000-000000000000"),
                            StatusId = 3
                        },
                        new
                        {
                            Id = -1006,
                            Code = "StartsWith",
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            Culture = "en-US",
                            Description = "Value starts with given text",
                            DisplayName = "Starts With",
                            EntityName = "FilterItem",
                            FieldName = "Code",
                            ItemType = "Operator",
                            LastStatusBy = 0,
                            RowId = new Guid("00000000-0000-0000-0000-000000000000"),
                            StatusId = 3
                        },
                        new
                        {
                            Id = -1007,
                            Code = "NotStartsWith",
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            Culture = "tr-TR",
                            Description = "Başlangıç eşleşmesi değil",
                            DisplayName = "Başlamaz",
                            EntityName = "FilterItem",
                            FieldName = "Code",
                            ItemType = "Operator",
                            LastStatusBy = 0,
                            RowId = new Guid("00000000-0000-0000-0000-000000000000"),
                            StatusId = 3
                        },
                        new
                        {
                            Id = -1008,
                            Code = "NotStartsWith",
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            Culture = "en-US",
                            Description = "Value must not start with given text",
                            DisplayName = "Does Not Start With",
                            EntityName = "FilterItem",
                            FieldName = "Code",
                            ItemType = "Operator",
                            LastStatusBy = 0,
                            RowId = new Guid("00000000-0000-0000-0000-000000000000"),
                            StatusId = 3
                        },
                        new
                        {
                            Id = -1009,
                            Code = "EndsWith",
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            Culture = "tr-TR",
                            Description = "Bitiş eşleşmesi",
                            DisplayName = "Biter",
                            EntityName = "FilterItem",
                            FieldName = "Code",
                            ItemType = "Operator",
                            LastStatusBy = 0,
                            RowId = new Guid("00000000-0000-0000-0000-000000000000"),
                            StatusId = 3
                        },
                        new
                        {
                            Id = -1010,
                            Code = "EndsWith",
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            Culture = "en-US",
                            Description = "Value ends with given text",
                            DisplayName = "Ends With",
                            EntityName = "FilterItem",
                            FieldName = "Code",
                            ItemType = "Operator",
                            LastStatusBy = 0,
                            RowId = new Guid("00000000-0000-0000-0000-000000000000"),
                            StatusId = 3
                        },
                        new
                        {
                            Id = -1011,
                            Code = "NotEndsWith",
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            Culture = "tr-TR",
                            Description = "Bitiş eşleşmesi değil",
                            DisplayName = "Bitmez",
                            EntityName = "FilterItem",
                            FieldName = "Code",
                            ItemType = "Operator",
                            LastStatusBy = 0,
                            RowId = new Guid("00000000-0000-0000-0000-000000000000"),
                            StatusId = 3
                        },
                        new
                        {
                            Id = -1012,
                            Code = "NotEndsWith",
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            Culture = "en-US",
                            Description = "Value must not end with given text",
                            DisplayName = "Does Not End With",
                            EntityName = "FilterItem",
                            FieldName = "Code",
                            ItemType = "Operator",
                            LastStatusBy = 0,
                            RowId = new Guid("00000000-0000-0000-0000-000000000000"),
                            StatusId = 3
                        },
                        new
                        {
                            Id = -1013,
                            Code = "Contains",
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            Culture = "tr-TR",
                            Description = "İçinde geçen değer varsa",
                            DisplayName = "İçerir",
                            EntityName = "FilterItem",
                            FieldName = "Code",
                            ItemType = "Operator",
                            LastStatusBy = 0,
                            RowId = new Guid("00000000-0000-0000-0000-000000000000"),
                            StatusId = 3
                        },
                        new
                        {
                            Id = -1014,
                            Code = "Contains",
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            Culture = "en-US",
                            Description = "Value contains given text",
                            DisplayName = "Contains",
                            EntityName = "FilterItem",
                            FieldName = "Code",
                            ItemType = "Operator",
                            LastStatusBy = 0,
                            RowId = new Guid("00000000-0000-0000-0000-000000000000"),
                            StatusId = 3
                        },
                        new
                        {
                            Id = -1015,
                            Code = "NotContains",
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            Culture = "tr-TR",
                            Description = "İçinde geçen değer yoksa",
                            DisplayName = "İçermez",
                            EntityName = "FilterItem",
                            FieldName = "Code",
                            ItemType = "Operator",
                            LastStatusBy = 0,
                            RowId = new Guid("00000000-0000-0000-0000-000000000000"),
                            StatusId = 3
                        },
                        new
                        {
                            Id = -1016,
                            Code = "NotContains",
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            Culture = "en-US",
                            Description = "Value must not contain given text",
                            DisplayName = "Does Not Contain",
                            EntityName = "FilterItem",
                            FieldName = "Code",
                            ItemType = "Operator",
                            LastStatusBy = 0,
                            RowId = new Guid("00000000-0000-0000-0000-000000000000"),
                            StatusId = 3
                        },
                        new
                        {
                            Id = -1017,
                            Code = "Between",
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            Culture = "tr-TR",
                            Description = "İki değer arasındaysa",
                            DisplayName = "Arasında",
                            EntityName = "FilterItem",
                            FieldName = "Code",
                            ItemType = "Operator",
                            LastStatusBy = 0,
                            RowId = new Guid("00000000-0000-0000-0000-000000000000"),
                            StatusId = 3
                        },
                        new
                        {
                            Id = -1018,
                            Code = "Between",
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            Culture = "en-US",
                            Description = "Value must be between two values",
                            DisplayName = "Between",
                            EntityName = "FilterItem",
                            FieldName = "Code",
                            ItemType = "Operator",
                            LastStatusBy = 0,
                            RowId = new Guid("00000000-0000-0000-0000-000000000000"),
                            StatusId = 3
                        },
                        new
                        {
                            Id = -1019,
                            Code = "NotBetween",
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            Culture = "tr-TR",
                            Description = "İki değer arasında olmamalı",
                            DisplayName = "Arasında Değil",
                            EntityName = "FilterItem",
                            FieldName = "Code",
                            ItemType = "Operator",
                            LastStatusBy = 0,
                            RowId = new Guid("00000000-0000-0000-0000-000000000000"),
                            StatusId = 3
                        },
                        new
                        {
                            Id = -1020,
                            Code = "NotBetween",
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            Culture = "en-US",
                            Description = "Value must not be between two values",
                            DisplayName = "Not Between",
                            EntityName = "FilterItem",
                            FieldName = "Code",
                            ItemType = "Operator",
                            LastStatusBy = 0,
                            RowId = new Guid("00000000-0000-0000-0000-000000000000"),
                            StatusId = 3
                        },
                        new
                        {
                            Id = -1021,
                            Code = "GreaterThan",
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            Culture = "tr-TR",
                            Description = "Belirtilen değerden büyükse",
                            DisplayName = "Büyük",
                            EntityName = "FilterItem",
                            FieldName = "Code",
                            ItemType = "Operator",
                            LastStatusBy = 0,
                            RowId = new Guid("00000000-0000-0000-0000-000000000000"),
                            StatusId = 3
                        },
                        new
                        {
                            Id = -1022,
                            Code = "GreaterThan",
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            Culture = "en-US",
                            Description = "Value must be greater than given value",
                            DisplayName = "Greater Than",
                            EntityName = "FilterItem",
                            FieldName = "Code",
                            ItemType = "Operator",
                            LastStatusBy = 0,
                            RowId = new Guid("00000000-0000-0000-0000-000000000000"),
                            StatusId = 3
                        },
                        new
                        {
                            Id = -1023,
                            Code = "GreaterThanOrEqual",
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            Culture = "tr-TR",
                            Description = "Belirtilen değerden büyük ya da eşit",
                            DisplayName = "Büyük veya Eşit",
                            EntityName = "FilterItem",
                            FieldName = "Code",
                            ItemType = "Operator",
                            LastStatusBy = 0,
                            RowId = new Guid("00000000-0000-0000-0000-000000000000"),
                            StatusId = 3
                        },
                        new
                        {
                            Id = -1024,
                            Code = "GreaterThanOrEqual",
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            Culture = "en-US",
                            Description = "Value must be greater than or equal to given value",
                            DisplayName = "Greater Than Or Equal",
                            EntityName = "FilterItem",
                            FieldName = "Code",
                            ItemType = "Operator",
                            LastStatusBy = 0,
                            RowId = new Guid("00000000-0000-0000-0000-000000000000"),
                            StatusId = 3
                        },
                        new
                        {
                            Id = -1025,
                            Code = "LessThan",
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            Culture = "tr-TR",
                            Description = "Belirtilen değerden küçükse",
                            DisplayName = "Küçük",
                            EntityName = "FilterItem",
                            FieldName = "Code",
                            ItemType = "Operator",
                            LastStatusBy = 0,
                            RowId = new Guid("00000000-0000-0000-0000-000000000000"),
                            StatusId = 3
                        },
                        new
                        {
                            Id = -1026,
                            Code = "LessThan",
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            Culture = "en-US",
                            Description = "Value must be less than given value",
                            DisplayName = "Less Than",
                            EntityName = "FilterItem",
                            FieldName = "Code",
                            ItemType = "Operator",
                            LastStatusBy = 0,
                            RowId = new Guid("00000000-0000-0000-0000-000000000000"),
                            StatusId = 3
                        },
                        new
                        {
                            Id = -1027,
                            Code = "LessThanOrEqual",
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            Culture = "tr-TR",
                            Description = "Belirtilen değerden küçük ya da eşit",
                            DisplayName = "Küçük veya Eşit",
                            EntityName = "FilterItem",
                            FieldName = "Code",
                            ItemType = "Operator",
                            LastStatusBy = 0,
                            RowId = new Guid("00000000-0000-0000-0000-000000000000"),
                            StatusId = 3
                        },
                        new
                        {
                            Id = -1028,
                            Code = "LessThanOrEqual",
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            Culture = "en-US",
                            Description = "Value must be less than or equal to given value",
                            DisplayName = "Less Than Or Equal",
                            EntityName = "FilterItem",
                            FieldName = "Code",
                            ItemType = "Operator",
                            LastStatusBy = 0,
                            RowId = new Guid("00000000-0000-0000-0000-000000000000"),
                            StatusId = 3
                        },
                        new
                        {
                            Id = -1029,
                            Code = "In",
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            Culture = "tr-TR",
                            Description = "Liste içindeki değerlerden biriyse",
                            DisplayName = "İçinde",
                            EntityName = "FilterItem",
                            FieldName = "Code",
                            ItemType = "Operator",
                            LastStatusBy = 0,
                            RowId = new Guid("00000000-0000-0000-0000-000000000000"),
                            StatusId = 3
                        },
                        new
                        {
                            Id = -1030,
                            Code = "In",
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            Culture = "en-US",
                            Description = "Value must be in the given list",
                            DisplayName = "In",
                            EntityName = "FilterItem",
                            FieldName = "Code",
                            ItemType = "Operator",
                            LastStatusBy = 0,
                            RowId = new Guid("00000000-0000-0000-0000-000000000000"),
                            StatusId = 3
                        },
                        new
                        {
                            Id = -1031,
                            Code = "NotIn",
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            Culture = "tr-TR",
                            Description = "Liste içindeki değerlerden biri değilse",
                            DisplayName = "İçinde Değil",
                            EntityName = "FilterItem",
                            FieldName = "Code",
                            ItemType = "Operator",
                            LastStatusBy = 0,
                            RowId = new Guid("00000000-0000-0000-0000-000000000000"),
                            StatusId = 3
                        },
                        new
                        {
                            Id = -1032,
                            Code = "NotIn",
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            Culture = "en-US",
                            Description = "Value must not be in the given list",
                            DisplayName = "Not In",
                            EntityName = "FilterItem",
                            FieldName = "Code",
                            ItemType = "Operator",
                            LastStatusBy = 0,
                            RowId = new Guid("00000000-0000-0000-0000-000000000000"),
                            StatusId = 3
                        },
                        new
                        {
                            Id = -1033,
                            Code = "IsNull",
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            Culture = "tr-TR",
                            Description = "Değer null veya empty ise",
                            DisplayName = "Boş",
                            EntityName = "FilterItem",
                            FieldName = "Code",
                            ItemType = "Operator",
                            LastStatusBy = 0,
                            RowId = new Guid("00000000-0000-0000-0000-000000000000"),
                            StatusId = 3
                        },
                        new
                        {
                            Id = -1034,
                            Code = "IsNull",
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            Culture = "en-US",
                            Description = "Value is null or empty",
                            DisplayName = "Is Null/Empty",
                            EntityName = "FilterItem",
                            FieldName = "Code",
                            ItemType = "Operator",
                            LastStatusBy = 0,
                            RowId = new Guid("00000000-0000-0000-0000-000000000000"),
                            StatusId = 3
                        },
                        new
                        {
                            Id = -1035,
                            Code = "IsNotNull",
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            Culture = "tr-TR",
                            Description = "Değer null değil ve empty değil ise",
                            DisplayName = "Boş Değil",
                            EntityName = "FilterItem",
                            FieldName = "Code",
                            ItemType = "Operator",
                            LastStatusBy = 0,
                            RowId = new Guid("00000000-0000-0000-0000-000000000000"),
                            StatusId = 3
                        },
                        new
                        {
                            Id = -1036,
                            Code = "IsNotNull",
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            Culture = "en-US",
                            Description = "Value is not null and not empty",
                            DisplayName = "Is Not Null/Empty",
                            EntityName = "FilterItem",
                            FieldName = "Code",
                            ItemType = "Operator",
                            LastStatusBy = 0,
                            RowId = new Guid("00000000-0000-0000-0000-000000000000"),
                            StatusId = 3
                        });
                });

            modelBuilder.Entity("Statu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(4)
                        .HasColumnType("datetimeoffset(4)")
                        .HasDefaultValueSql("SYSDATETIMEOFFSET()");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastStatusAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(4)
                        .HasColumnType("datetimeoffset(4)")
                        .HasDefaultValueSql("SYSDATETIMEOFFSET()");

                    b.Property<int>("LastStatusBy")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasPrecision(4)
                        .HasColumnType("datetimeoffset(4)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Status", (string)null);

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Code = "DFT",
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            Description = "Record is in draft state",
                            LastStatusBy = 0,
                            Name = "Draft",
                            RowId = new Guid("00000000-0000-0000-0000-000000000000"),
                            StatusId = 3
                        },
                        new
                        {
                            Id = -10,
                            Code = "AWT",
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            Description = "Record is waiting for approval",
                            LastStatusBy = 0,
                            Name = "Awaiting Approval",
                            RowId = new Guid("00000000-0000-0000-0000-000000000000"),
                            StatusId = 3
                        },
                        new
                        {
                            Id = -11,
                            Code = "APR",
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            Description = "Record has been approved",
                            LastStatusBy = 0,
                            Name = "Approved",
                            RowId = new Guid("00000000-0000-0000-0000-000000000000"),
                            StatusId = 3
                        },
                        new
                        {
                            Id = -12,
                            Code = "REJ",
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            Description = "Record has been rejected",
                            LastStatusBy = 0,
                            Name = "Rejected",
                            RowId = new Guid("00000000-0000-0000-0000-000000000000"),
                            StatusId = 3
                        },
                        new
                        {
                            Id = -13,
                            Code = "PSV",
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            Description = "Record is passive / inactive",
                            LastStatusBy = 0,
                            Name = "Passive",
                            RowId = new Guid("00000000-0000-0000-0000-000000000000"),
                            StatusId = 3
                        },
                        new
                        {
                            Id = -14,
                            Code = "DEL",
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            Description = "Record has been deleted",
                            LastStatusBy = 0,
                            Name = "Deleted",
                            RowId = new Guid("00000000-0000-0000-0000-000000000000"),
                            StatusId = 3
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
